<?php
/**
* Register menus and urls
*/
use Drupal\node\Entity\Node;

/**
 * hook_grid_boxes_search_alter
 *
 * Hide grid boxes that had been moved to trash
 * 
 * @param  array 	$boxes  	dataset to be modified
 * @param  int 		$grid_id 	id of nodes grid
 * @param  int 		$node_id 	node id
 */
function grid_element_trash_grid_boxes_search_alter(&$boxes,$grid_id,$node_id)
{
	/** @var Node $node */
	$node = Node::Load($node_id);
	$trashed=\Drupal::config("grid.trash")->get("trashed_boxes");
	$trashed_reuse=\Drupal::config("grid.trash")->get("trashed_reuse_boxes");
	for($i=0;$i<count($boxes);$i++)
	{
		if($boxes[$i]['type'] == "reference")
		{
			$map = $trashed_reuse[$boxes[$i]["content"]->boxid];

		}
		else
		{
			$map = $trashed[$boxes[$i]['type']];
		}
		if( $map[$node->getType()] )
	    {
	        array_splice($boxes,$i,1);
	        $i--;
	    }
	}
}



/**
 * hide grid containers that had been moved to trash
 * @param  array 	$containers  	dataset to be modified
 * @param  int 		$grid_id 		grid id
 * @param  int 		$node_id 		node id
 */
function grid_element_trash_grid_containers_alter(&$containers,$grid_id,$node_id)
{
	/** @var Node $node */
	$node = Node::load($node_id);
	$trash=\Drupal::config("grid.trash")->get("trashed_containers");
	for($i=0;$i<count($containers);$i++)
	{
		$map = $trash[$containers[$i]["type"]];
	    if( $map[$node->getType()] )
	    {
	        array_splice($containers,$i,1);
	        $i--;
	    }
	}
}

/**
 * hide reusable containers in grid that had been moved to trash
 * @param  array $containers 	dataset to be modified
 * @param  int $grid_id     	grid id
 * @param  int $node_id     	node id
 */
function grid_element_trash_grid_reusable_containers_alter(&$containers,$grid_id,$node_id)
{
	/** @var Node $node */
	$node = Node::load($node_id);
	$trash=\Drupal::config("grid.trash")->get("trashed_reuse_containers");
	for($i=0;$i<count($containers);$i++)
	{
		$map = $trash[$containers[$i]["id"]];
	    if( $map[$node->getType()] )
	    {
	        array_splice($containers,$i,1);
	        $i--;
	    }
	}
}

?>